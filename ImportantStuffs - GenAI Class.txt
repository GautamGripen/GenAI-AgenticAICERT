Github repository by trainer - https://github.com/RajeshThakur1/BMGR-MAY2025-GIAI-2.git ------- (Please clone the "README.md" file for all the commands given by Trainer !!! Do it regularly and copy the content into your file "CommandsToUse.txt")

My repository - https://github.com/GautamGripen/GenAI-AgenticAICERT.git

-- TIP - Create different environments as then there wont be any clash between rojects 
-- IDE used - PyCharm
-- Open source distribution - Anaconda (miniconda for package manager)
-- For sharing the link, trainer will upload in https://codeshare.io/YzdOzY
-- Ollama is like an emulator which helps in running LLMs locally in your machine. It runs the model similar to docker using the command "ollama run <model_name>". Advantage is that you will have data privacy.
-- If Ollama doesn't work, use docker to run LLMs
-- The cloud site to run LLMs withiout utilising your local machine - https://console.groq.com/home
-- Why Use Anaconda?
ans- It gives you all the standard packages used in scientific computing in a convenient package without having to worry about installing them all individually with their dependencies.

If you don't plan on using typical scientific computing packages (numpy, matplotlib, scipy, pandas, etc.) or any of the packaged software (jupyter notebooks, spyder IDE), then the only downside is that you're downloading software that you might not need.

Regardless if you go with a distribution like Anaconda or just a fresh python environment, it's useful to learn about environment management and package installation with pip and venv or conda.

Besides the convenience, there's not going to be a major difference between using anaconda vs setting up your own environment. It's all the same python underneath the hood.

ALSO ---

I tend to install Miniconda (Anaconda’s much smaller sibling distribution) as a way to get ‘conda’ (the package manager), and then use conda to create environments for each project.

Conda has some really nice features:

You can entirely define an environment, including the version of python, using ‘environment.yml’ files

It has a much more powerful dependency solver than pip, making it less likely you’ll end up with an inconsistent environment

It tries to install everything as a transaction

It (sort of) works with pip

The Anaconda team maintains the core scientific stack you get when you install Anaconda, but the the “conda forge” channel includes a lot of the other major Python packages not included in Anaconda.

-- Python is a interpreter based language, it makes it slow at the same time but then very dynamic. In programming, an interpreter is a program that executes instructions written in a high-level language by translating them one line at a time into machine code or an intermediate representation, and then immediately running that translated code. Unlike compilers, which translate the entire program before execution, interpreters process and execute code in real-time. 
Here's a more detailed explanation: 
Execution:
Interpreters execute code directly, meaning they don't create a separate executable file like compilers do.
Line-by-line translation:
Interpreters read and translate one line of code at a time, and then execute that translated line.
Real-time processing:
This line-by-line approach allows for immediate execution and debugging, as errors can be caught and corrected as the program runs.
Common use:
Interpreters are often used for scripting languages and languages where real-time interaction and debugging are important, like Python, Ruby, and JavaScript.
Performance:
Interpreted languages can sometimes have slightly slower execution speeds than compiled languages, as they need to perform the translation at runtime.
What is an Interpreter? Types, Differences, Advantages ...
An interpreter is a program that directly executes the instructions in a high-level language, without converting it into machine c...

toppr.com
What is Interpreter: Types, Advantages and Disadvantages - Shiksha Online
16 Aug 2023 — An interpreter is a type of computer program that directly executes instructions written in a programming or scripting ...

Shiksha

What is an Interpreter? - Naukri Code 360
13 Jul 2024 — An interpreter is a program that executes code directly, translating it line-by-line into machine language at runtime.

Naukri.com


-- While we execute fast API output throug webpage, we will just add "/docs " at the end of the url and access the functions. Root is always the Home page of the webpage. When we execute the function, the curl out can be called from any API tool like postman etc..

curl -X 'POST' \
  'http://127.0.0.1:5001/add?a=78&b=45.365' \
  -H 'accept: application/json' \
  -d ''